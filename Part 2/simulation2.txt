--------------------
Cycle:1

IF Unit:
	Waiting Instruction: 
	Executed Instruction: 
Pre-Issue Queue:
	Entry 0: [LW R1, 160(R0)]
	Entry 1: [LW R2, 164(R0)]
	Entry 2:
	Entry 3:
Pre-ALU Queue:
	Entry 0:
	Entry 1:
Pre-MEM Queue: 
Post-MEM Queue: 
Post-ALU Queue: 

Registers
R00:	0	0	0	0	0	0	0	0
R08:	0	0	0	0	0	0	0	0
R16:	0	0	0	0	0	0	0	0
R24:	0	0	0	0	0	0	0	0
Data
160:	10	7	0	0	0	0	0	0
192:	0
--------------------
Cycle:2

IF Unit:
	Waiting Instruction: 
	Executed Instruction: 
Pre-Issue Queue:
	Entry 0: [AND R3, R1, R2]
	Entry 1: [OR R4, R1, R3]
	Entry 2:
	Entry 3:
Pre-ALU Queue:
	Entry 0: [LW R1, 160(R0)]
	Entry 1: [LW R2, 164(R0)]
Pre-MEM Queue: 
Post-MEM Queue: 
Post-ALU Queue: 

Registers
R00:	0	0	0	0	0	0	0	0
R08:	0	0	0	0	0	0	0	0
R16:	0	0	0	0	0	0	0	0
R24:	0	0	0	0	0	0	0	0
Data
160:	10	7	0	0	0	0	0	0
192:	0
--------------------
Cycle:3

IF Unit:
	Waiting Instruction: 
	Executed Instruction: 
Pre-Issue Queue:
	Entry 0: [AND R3, R1, R2]
	Entry 1: [OR R4, R1, R3]
	Entry 2: [XOR R5, R1, R4]
	Entry 3: [NOR R6, R1, R5]
Pre-ALU Queue:
	Entry 0: [LW R2, 164(R0)]
	Entry 1:
Pre-MEM Queue: [LW R1, 160(R0)]
Post-MEM Queue: 
Post-ALU Queue: 

Registers
R00:	0	0	0	0	0	0	0	0
R08:	0	0	0	0	0	0	0	0
R16:	0	0	0	0	0	0	0	0
R24:	0	0	0	0	0	0	0	0
Data
160:	10	7	0	0	0	0	0	0
192:	0
--------------------
Cycle:4

IF Unit:
	Waiting Instruction: 
	Executed Instruction: 
Pre-Issue Queue:
	Entry 0: [AND R3, R1, R2]
	Entry 1: [OR R4, R1, R3]
	Entry 2: [XOR R5, R1, R4]
	Entry 3: [NOR R6, R1, R5]
Pre-ALU Queue:
	Entry 0:
	Entry 1:
Pre-MEM Queue: [LW R2, 164(R0)]
Post-MEM Queue: [LW R1, 160(R0)]
Post-ALU Queue: 

Registers
R00:	0	0	0	0	0	0	0	0
R08:	0	0	0	0	0	0	0	0
R16:	0	0	0	0	0	0	0	0
R24:	0	0	0	0	0	0	0	0
Data
160:	10	7	0	0	0	0	0	0
192:	0
--------------------
Cycle:5

IF Unit:
	Waiting Instruction: 
	Executed Instruction: 
Pre-Issue Queue:
	Entry 0: [AND R3, R1, R2]
	Entry 1: [OR R4, R1, R3]
	Entry 2: [XOR R5, R1, R4]
	Entry 3: [NOR R6, R1, R5]
Pre-ALU Queue:
	Entry 0:
	Entry 1:
Pre-MEM Queue: 
Post-MEM Queue: [LW R2, 164(R0)]
Post-ALU Queue: 

Registers
R00:	0	10	0	0	0	0	0	0
R08:	0	0	0	0	0	0	0	0
R16:	0	0	0	0	0	0	0	0
R24:	0	0	0	0	0	0	0	0
Data
160:	10	7	0	0	0	0	0	0
192:	0
--------------------
Cycle:6

IF Unit:
	Waiting Instruction: 
	Executed Instruction: 
Pre-Issue Queue:
	Entry 0: [AND R3, R1, R2]
	Entry 1: [OR R4, R1, R3]
	Entry 2: [XOR R5, R1, R4]
	Entry 3: [NOR R6, R1, R5]
Pre-ALU Queue:
	Entry 0:
	Entry 1:
Pre-MEM Queue: 
Post-MEM Queue: 
Post-ALU Queue: 

Registers
R00:	0	10	7	0	0	0	0	0
R08:	0	0	0	0	0	0	0	0
R16:	0	0	0	0	0	0	0	0
R24:	0	0	0	0	0	0	0	0
Data
160:	10	7	0	0	0	0	0	0
192:	0
--------------------
Cycle:7

IF Unit:
	Waiting Instruction: 
	Executed Instruction: 
Pre-Issue Queue:
	Entry 0: [OR R4, R1, R3]
	Entry 1: [XOR R5, R1, R4]
	Entry 2: [NOR R6, R1, R5]
	Entry 3:
Pre-ALU Queue:
	Entry 0: [AND R3, R1, R2]
	Entry 1:
Pre-MEM Queue: 
Post-MEM Queue: 
Post-ALU Queue: 

Registers
R00:	0	10	7	0	0	0	0	0
R08:	0	0	0	0	0	0	0	0
R16:	0	0	0	0	0	0	0	0
R24:	0	0	0	0	0	0	0	0
Data
160:	10	7	0	0	0	0	0	0
192:	0
--------------------
Cycle:8

IF Unit:
	Waiting Instruction: 
	Executed Instruction: 
Pre-Issue Queue:
	Entry 0: [OR R4, R1, R3]
	Entry 1: [XOR R5, R1, R4]
	Entry 2: [NOR R6, R1, R5]
	Entry 3: [SW R6, 168(R0)]
Pre-ALU Queue:
	Entry 0:
	Entry 1:
Pre-MEM Queue: 
Post-MEM Queue: 
Post-ALU Queue: [AND R3, R1, R2]

Registers
R00:	0	10	7	0	0	0	0	0
R08:	0	0	0	0	0	0	0	0
R16:	0	0	0	0	0	0	0	0
R24:	0	0	0	0	0	0	0	0
Data
160:	10	7	0	0	0	0	0	0
192:	0
--------------------
Cycle:9

IF Unit:
	Waiting Instruction: 
	Executed Instruction: 
Pre-Issue Queue:
	Entry 0: [OR R4, R1, R3]
	Entry 1: [XOR R5, R1, R4]
	Entry 2: [NOR R6, R1, R5]
	Entry 3: [SW R6, 168(R0)]
Pre-ALU Queue:
	Entry 0:
	Entry 1:
Pre-MEM Queue: 
Post-MEM Queue: 
Post-ALU Queue: 

Registers
R00:	0	10	7	2	0	0	0	0
R08:	0	0	0	0	0	0	0	0
R16:	0	0	0	0	0	0	0	0
R24:	0	0	0	0	0	0	0	0
Data
160:	10	7	0	0	0	0	0	0
192:	0
--------------------
Cycle:10

IF Unit:
	Waiting Instruction: 
	Executed Instruction: 
Pre-Issue Queue:
	Entry 0: [XOR R5, R1, R4]
	Entry 1: [NOR R6, R1, R5]
	Entry 2: [SW R6, 168(R0)]
	Entry 3:
Pre-ALU Queue:
	Entry 0: [OR R4, R1, R3]
	Entry 1:
Pre-MEM Queue: 
Post-MEM Queue: 
Post-ALU Queue: 

Registers
R00:	0	10	7	2	0	0	0	0
R08:	0	0	0	0	0	0	0	0
R16:	0	0	0	0	0	0	0	0
R24:	0	0	0	0	0	0	0	0
Data
160:	10	7	0	0	0	0	0	0
192:	0
--------------------
Cycle:11

IF Unit:
	Waiting Instruction: 
	Executed Instruction: [BREAK]
Pre-Issue Queue:
	Entry 0: [XOR R5, R1, R4]
	Entry 1: [NOR R6, R1, R5]
	Entry 2: [SW R6, 168(R0)]
	Entry 3:
Pre-ALU Queue:
	Entry 0:
	Entry 1:
Pre-MEM Queue: 
Post-MEM Queue: 
Post-ALU Queue: [OR R4, R1, R3]

Registers
R00:	0	10	7	2	0	0	0	0
R08:	0	0	0	0	0	0	0	0
R16:	0	0	0	0	0	0	0	0
R24:	0	0	0	0	0	0	0	0
Data
160:	10	7	0	0	0	0	0	0
192:	0
